{
    "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
    "borderColor": "#E0DEDE",
    "srcDoc": {
        "css": "#map {\n  height: 1000px;\n}",
        "js": "var map = L.map('map').setView([45.51474433679968, -122.65810311970161], 14);\nvar markers1 = {}; // Dictionary to hold your markers in an outer scope.\n\nappsmith.onReady(() => {\n  //\tL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  //    maxZoom: 19,\n  //    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap<\/a>'\n  //\t}).addTo(map);\n  L.tileLayer('https://a.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png', {\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap<\/a>, &copy; <a href=\"https://carto.com/attributions\">CARTO<\/a>',\n    subdomains: 'abcd',\n    maxZoom: 20,\n    minZoom: 0\n  }).addTo(map);\n  const markerArray = appsmith.model.markerList;\n  updateMap(markerArray);\n  map.on();\n});\nappsmith.onModelChange(() => {\n  const markerArray = appsmith.model.markerList;\n  updateMap(markerArray);\n});\nfunction updateSelect(e) {\n  const marker = e.target;\n  const position = marker.getLatLng();\n  console.log(marker.options.id);\n  appsmith.updateModel({\n    selectedMarker: {\n      id: marker.options.id,\n      latlng: position\n    }\n  });\n  appsmith.triggerEvent(\"onMarkerClick\");\n}\nfunction updateOver(e) {\n  e.target.setTooltipContent(e.target.options.id);\n}\nfunction updateOut(e) {\n  e.target.setTooltipContent(e.target.options.alt);\n}\nfunction updateMap(markerArray) {\n  //const markerArray = appsmith.model.markerArray;\n  const markerURL = appsmith.model.markerURL;\n  var point = L.point(0, -10);\n  var myIcon = L.icon({\n    iconUrl: markerURL,\n    iconSize: [20, 20]\n  });\n  for (var i = 0; i < markerArray.length; i++) {\n    var id = markerArray[i].title;\n    var alt = markerArray[i].alt;\n    var tooltip = L.tooltip({\n      permanent: true,\n      direction: 'top',\n      offset: point\n    });\n    if (!markers1[id]) {\n      markers1[id] = L.marker([markerArray[i].lat, markerArray[i].long], {\n        icon: myIcon,\n        id: id,\n        alt: alt\n      }).bindTooltip(tooltip.setContent(alt)).openTooltip().addTo(map).on('click', updateSelect).on('mouseover', updateOver).on('mouseout', updateOut);\n    } else {\n      markers1[id].setLatLng([markerArray[i].lat, markerArray[i].long]);\n      markers1[id].options.alt = markerArray[i].alt;\n      markers1[id].setTooltipContent(markerArray[i].alt);\n    }\n    ;\n  }\n}",
        "html": " <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n <!-- Make sure you put this AFTER Leaflet's CSS -->\n <script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"><\/script>\n <div id=\"map\"><\/div>\n"
    },
    "isCanvas": false,
    "iconSVG": "/static/media/icon.ff37253a5ce2f5284c42ede26ce165f9.svg",
    "topRow": 18,
    "type": "CUSTOM_WIDGET",
    "dynamicBindingPathList": [
        {"key": "theme"},
        {"key": "borderRadius"},
        {"key": "boxShadow"},
        {"key": "defaultModel"}
    ],
    "leftColumn": 1,
    "onMarkerClick": "{{pdxCDS.getZones();}}",
    "events": ["onMarkerClick"],
    "dynamicHeight": "FIXED",
    "isSearchWildcard": true,
    "onCanvasUI": {
        "focusBGCSSVar": "--on-canvas-ui-widget-focus",
        "disableParentSelection": false,
        "focusColorCSSVar": "--on-canvas-ui-widget-selection",
        "selectionBGCSSVar": "--on-canvas-ui-widget-selection",
        "selectionColorCSSVar": "--on-canvas-ui-widget-focus"
    },
    "isVisible": true,
    "version": 1,
    "tags": ["Display"],
    "isLoading": false,
    "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
    "originalBottomRow": 103,
    "needsErrorInfo": false,
    "mobileBottomRow": 30,
    "widgetName": "map",
    "dynamicPropertyPathList": [],
    "displayName": "Custom",
    "searchTags": ["external"],
    "bottomRow": 105,
    "parentRowSpace": 10,
    "hideCard": false,
    "mobileRightColumn": 22,
    "dynamicTriggerPathList": [{"key": "onMarkerClick"}],
    "parentColumnSpace": 19.8125,
    "defaultModel": "{{\n{\n\tmarkerURL: \"https://b-linepdx.com/android-chrome-192x192.png\",\n\tmarkerList: getLocations.update.data,\n\tselectedMarker: {\n\"id\":\"nada\",\n\"latlng\":{\n\"lat\":0,\n\"lng\":0\n}\n}\n}\n}}",
    "borderWidth": "1",
    "theme": "{{appsmith.theme}}",
    "key": "2z6onnvbea",
    "backgroundColor": "#FFFFFF",
    "isDeprecated": false,
    "rightColumn": 62,
    "thumbnailSVG": "/static/media/thumbnail.a7d7cde44fad9a0d4d490def43560a78.svg",
    "widgetId": "nbyh7cavx1",
    "uncompiledSrcDoc": {
        "css": "#map { height: 1000px; }",
        "js": "\n\nvar map = L.map('map').setView([45.51474433679968, -122.65810311970161], 14);\nvar markers1 = {}; // Dictionary to hold your markers in an outer scope.\n\n\nappsmith.onReady(()=>{\n\n//\tL.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//    maxZoom: 19,\n//    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap<\/a>'\n//\t}).addTo(map);\n  L.tileLayer('https://a.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png', {\n   attribution:'&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap<\/a>, &copy; <a href=\"https://carto.com/attributions\">CARTO<\/a>',\n   subdomains: 'abcd',\n   maxZoom: 20,\n   minZoom: 0\n }).addTo(map);\n\tconst markerArray = appsmith.model.markerList;\n\n\tupdateMap(markerArray);\n\n\tmap.on()\n\n})\n\nappsmith.onModelChange(()=>{\n\tconst markerArray = appsmith.model.markerList;\n\tupdateMap(markerArray);\n\t\n\t})\n\nfunction updateSelect(e){\n\tconst marker = e.target;\n\tconst position = marker.getLatLng();\n\tconsole.log(marker.options.id);\n\tappsmith.updateModel({selectedMarker : {id:marker.options.id,latlng: position}});\n\tappsmith.triggerEvent(\"onMarkerClick\")\n}\n\nfunction updateOver(e) {\n\te.target.setTooltipContent(e.target.options.id);\n}\nfunction updateOut(e) {\n\te.target.setTooltipContent(e.target.options.alt);\n}\n\nfunction updateMap(markerArray){\n\t//const markerArray = appsmith.model.markerArray;\n\tconst markerURL = appsmith.model.markerURL;\t\n\tvar point = L.point(0,-10);\n\tvar myIcon = L.icon({iconUrl: markerURL, iconSize: [20, 20]});\n\t\n\tfor (var i = 0; i < markerArray.length; i++) {\n\t\tvar id = markerArray[i].title;\n\t\tvar alt = markerArray[i].alt;\n\n\t\tvar tooltip = L.tooltip({permanent:true, direction: 'top',offset: point});\n   \tif (!markers1[id]) {\n\t\t\tmarkers1[id] = L.marker([markerArray[i].lat, markerArray[i].long],{icon: myIcon,id:id,alt:alt})\n            .bindTooltip(tooltip.setContent(alt)).openTooltip()\n            .addTo(map)\n\t\t\t\t\t\t.on('click',updateSelect)\n\t\t\t\t\t\t.on('mouseover',updateOver)\n\t\t\t\t\t\t.on('mouseout',updateOut);\n\t\t} else {\n\t\t\t\tmarkers1[id].setLatLng([markerArray[i].lat, markerArray[i].long]);\n\t\t\t\tmarkers1[id].options.alt= markerArray[i].alt;\n\t\t\t\tmarkers1[id].setTooltipContent(markerArray[i].alt);\n\t\t};\n\t\t\n\t}\n}\n\n\n",
        "html": " <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossorigin=\"\"/>\n <!-- Make sure you put this AFTER Leaflet's CSS -->\n <script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n     integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n     crossorigin=\"\"><\/script>\n <div id=\"map\"><\/div>\n"
    },
    "parentId": "0",
    "renderMode": "CANVAS",
    "mobileTopRow": 0,
    "originalTopRow": 16,
    "mobileLeftColumn": 0,
    "maxDynamicHeight": 9000,
    "minDynamicHeight": 4
}